# This dop plan will setup the test environment for DOPi
#
# For now we will just use a bermetal type and vagrant
# this should one day be replaced with dopv and some
# local endpoint to create the machines.
#

name: 'build_dop_test_environment'
max_in_flight: -1

infrastructures:
  'vagrant':
    type: 'baremetal'
    networks:
      'vboxnet0':
        ip_pool:
          from: 192.168.56.101
          to: 192.168.56.254
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.56.1

nodes:
  'puppetmaster.example.com':
    infrastructure: 'vagrant'
    image: 'puppetlabs/centos-7.0-64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.101'
  'broker.example.com':
    infrastructure: 'vagrant'
    image: 'puppetlabs/centos-7.0-64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.102'
  'linux01.example.com':
    infrastructure: 'vagrant'
    image: 'puppetlabs/centos-7.0-64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.103'
  'linux02.example.com':
    infrastructure: 'vagrant'
    image: 'puppetlabs/centos-7.0-64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.104'
  'linux03.example.com':
    infrastructure: 'vagrant'
    image: 'puppetlabs/centos-7.0-64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.105'
  'windows01.example.com':
    infrastructure: 'vagrant'
    image: 'opentable/win-2012r2-standard-amd64-nocm'
    interfaces:
      'eth0':
        network: 'vboxnet0'
        ip: '192.168.56.106'

credentials:
  'linux_login':
    type: 'username_password'
    username: 'root'
    password: 'puppet'
  'windows_login':
    type: 'username_password'
    username: 'administrator'
    password: 'vagrant'

configuration:
  nodes:
    'puppetmaster.example.com':
      role: 'puppetmaster'
    'broker.example.com':
      role: 'mcollective_broker'
    'windows01.example.com':
      os: 'windows'
  roles:
    'puppetmaster':
      classes:
        - 'foreman'
        - 'puppet'
      foreman::foreman_url: "%{hiera('::fqdn')}"
      foreman::unattended: 'false'
      foreman::authentication: 'false'
      puppet::server: true
      puppet::autosign: '/usr/local/bin/dop-puppet-autosign'
      puppet::autosign_mode: 'script'
      puppet::server_foreman: true
      puppet::server_rttendedeports: 'store'
      puppet::server_external_nodes: ''
    'mcollective_broker':
      classes:
        - 'java'
        - 'activemq'
      java::distribution: 'jdk'
      java::version: 'latest'
      activemq::instances:
        'mcollective':
          stomp_nio_port: "%{hiera('mcollective::broker_port')}"
          user_name: "%{hiera('mcollective::broker_user')}"
          user_password: "%{hiera('mcollective::broker_password')}"
  defaults:
    classes:
      - 'firewall'
      - 'puppet'
      - 'mcollective'
    role: 'base'
    os: 'linux'
    firewall::ensure: 'stopped'
    puppet::puppetmaster: 'puppetmaster.example.com'
    puppet::runmode: 'none'
    mcollective::use_node: true
    mcollective::connector: 'activemq'
    mcollective::broker_host: 'broker.example.com'
    mcollective::broker_port: 61614
    mcollective::broker_ssl: 'false'
    mcollective::broker_user: 'mcollective'
    mcollective::broker_password: 'vagrant'
    mcollective::security_provider: 'psk'
    mcollective::security_secret: 'vagrant'

steps:
  - name: 'Create virtual machines with vagrant'
    nodes: 'all'
    max_in_flight: 1
    command:
      plugin: 'custom'
      exec: 'vagrant'
      arguments: "up ${DOP_NODE_FQDN}"

  - name: 'Configure ssh credentials and wait until all the linux machines are online'
    nodes_by_config: {os: 'linux'}
    set_plugin_defaults: [{plugins: '/^ssh/', credentials: 'linux_login'}]
    command: 'ssh/wait_for_login'

  - name: 'Configure winrm credentials and wait until all the windows machines are online'
    nodes_by_config: {os: 'windows'}
    set_plugin_defaults: [{plugins: '/^winrm/', credentials: 'windows_login'}]
    command: 'winrm/wait_for_login'

  - name: 'install the puppetlabs repository'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/yum.repos.d/puppetlabs.repo'
      plugin: 'ssh/custom'
      exec: 'rpm'
      arguments: '-ivh https://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm'

  - name: 'install puppet on all the nodes'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/puppet'
      plugin: 'ssh/custom'
      exec: 'yum'
      arguments: 'install -y puppet'

  - name: 'copy the puppet configuration to the right place'
    roles: 'puppetmaster'
    command:
      plugin: 'ssh/custom'
      exec: 'cp'
      arguments: '-r /vagrant/spec/fixtures/puppet/* /etc/puppet/'

  - name: 'Install all the needed packages on the puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/rake'
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/bundle'
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/git'
        - plugin: 'ssh/file_exists'
          file: '/usr/include/ruby.h'
      plugin: 'ssh/custom'
      exec: 'yum'
      arguments: 'install -y rubygem-rake rubygem-bundler git ruby-devel'

  - name: 'Install librarian-puppet'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/local/bin/librarian-puppet'
      plugin: 'ssh/custom'
      exec: 'gem'
      arguments: 'install librarian-puppet'

  - name: 'Install all the puppet modules'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/puppet/.librarian/puppet/config'
      plugin: 'ssh/custom'
      exec: 'librarian-puppet'
      arguments: 'install'
      env: {LIBRARIAN_PUPPET_PUPPETFILE: '/etc/puppet/Puppetfile'}

  - name: 'Install dop_common for the puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/custom'
          exec: 'gem list | grep dop_common'
      plugin: 'ssh/custom'
      exec: 'cd /vagrant/vendor/cache/dop_common-*/ && gem build dop_common.gemspec && gem install dop_common*.gem'

  - name: 'Install DOPi so we can add the plan'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/vagrant/.bundle/config'
      plugin: 'ssh/custom'
      exec: 'bundle'
      arguments: 'install --local'
      env: {BUNDLE_GEMFILE: '/vagrant/Gemfile'}

  - name: 'Add deployment plan with hiera data to the plan cache'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/var/lib/dop/plans/build_dop_test_environment.yaml'
      plugin: 'ssh/custom'
      exec: 'bundle'
      arguments: 'exec dopi add /vagrant/spec/fixtures/testenv_plan.yaml'
      env: {BUNDLE_GEMFILE: '/vagrant/Gemfile'}

  - name: 'Run puppet on puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/httpd/conf.d/25-puppet.conf'
      plugin: 'ssh/custom'
      exec: 'puppet'
      arguments: 'apply /etc/puppet/manifests/site.pp'

  - name: 'Add puppetmaster to all hosts files'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_contains'
          file: '/etc/hosts'
          pattern: 'puppetmaster.example.com'
      plugin: 'ssh/custom'
      exec: "echo"
      arguments: '"192.168.56.101 puppetmaster.example.com puppetmaster" >> /etc/hosts'

  - name: 'Add broker to all hosts files'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_contains'
          file: '/etc/hosts'
          pattern: 'broker.example.com'
      plugin: 'ssh/custom'
      exec: "echo"
      arguments: '"192.168.56.102 broker.example.com broker" >> /etc/hosts'

  - name: 'Run puppet on the rest of the linux nodes'
    nodes_by_config: {os: 'linux'}
    exclude_roles: 'puppetmaster'
    command:
      plugin: 'ssh/puppet_agent_run'
      arguments: '--server puppetmaster.example.com'
