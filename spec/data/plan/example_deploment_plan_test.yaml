clouds:
  management:
    type: rhev
    endpoint: https://rhev.example.com/api/
    credentials:
      username: myuser
      password: mypass
  lamp:
    type: openstack
    endpoint: https://openstack.example.com/api/
    credentials:
      username: myuser
      password: mypass

nodes:

  mysql01.example.com:
    cloud: lamp
    image: rhel6
    nets:
      int: dhcp
    flavor: medium
    disks:
      database: 30G

  web01.example.com:
    cloud: lamp
    image: rhel6
    nets:
      int: dhcp
    flavor: small

  web02.example.com:
    cloud: lamp
    image: rhel6
    nets:
      int: dhcp
    flavor: small

  haproxy01.example.com:
    cloud: lamp
    image: rhel6
    nets:
      int: dhcp
    flavor: small

  haproxy02.example.com:
    cloud: lamp
    image: rhel6
    nets:
      int: dhcp
    flavor: small

configuration:
  nodes:
    mysql01.example.com:
      my_role: mysql
    web01.example.com:
      my_role: httpd
    web02.example.com:
      my_role: httpd
    haproxy01.example.com:
      my_role: haproxy
    haproxy02.example.com:
      my_role: haproxy
  roles:
    mysql:
      mysql::default_database:
         name: mydatabase
         user: myuser
         password: mypass

plan:
  max_in_flight: 2

steps:

    - name: test_run
      nodes: all
      command:
          plugin: custom
          exec: "sleep 2"
          arguments: {}
          env:
              ENV1: foo
              ENV2: bla
          node_verify_cmd: /bin/false
          dop_verify_cmd: /bin/false
          expect_exit_code: 0
          fail_on_warning: False
          parse_output:
              error:
                  - '^Error: '
              warning:
                  - '^Warning: '

    - name: 'Make sure we can login to all nodes'
      nodes: all
      command:
          plugin: ssh/wait_for_login
          plugin_timeout: 30

    - name: ssh_test_run
      nodes:
        - mysql01.example.com
      command:
          plugin: ssh/custom
          exec: "echo 'Warning: bla bla'"
          arguments: {}
          env:
              ENV1: foo
              ENV2: bla
          node_verify_cmd: /bin/false
          dop_verify_cmd: /bin/false
          expect_exit_code: 255
          fail_on_warning: False
          parse_output:
              error:
                  - '^Error: '
              warning:
                  - '^Warning: '

    - name: run_puppet
      nodes: all
      command:
          plugin: ssh/puppet_agent_run
          arguments:
              '--noop':

    - name: run_puppet2
      nodes: all
      command: ssh/puppet_agent_run

